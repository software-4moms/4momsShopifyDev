/* ==========================================================================
   Functions custom
   ========================================================================== */

/**
 * Separating this from `bootstrap-modified/functions.scss` to distinguish
 * it from (modified) Bootstrap function base.
 */

$font-size-root: 16; // No units, you assume the font size base of most browsers is 16px.

// Remove units from a number
// @param {Number} $numb - Number to remove unit from
// @return {Number} - Unitless number
// REF: https://css-tricks.com/snippets/sass/strip-unit-function/
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// Convert px to rem
// Use this for font-size
// @param {Number} $pxval - Number in pixels to convert to rem
// @param {Number} $font-size-root - Base font size for most browsers in px
@function pxtorem($pxval, $base: $font-size-root) {
  @return strip-unit($pxval) / $base * 1rem;
}

@function fontsize($pxval, $base: $font-size-root) {
  @return pxtorem($pxval, $base);
}

// Convert px to em
// Use this for letter-spacing
// @param {Number} $pxval - Number in pixels to convert to em
// @param {Number} $font-size-root - Base font size for most browsers in px
@function pxtoem($pxval, $base: $font-size-root) {
  @return strip-unit($pxval) / $base * 1em;
}

@function letterspacing($pxval, $base: $font-size-root) {
  @return pxtoem($pxval, $base);
}

// Convert px to em
// Use this for letter-spacing
// @param {Number} $pxval - Number in pixels to convert to em
// @param {Number} $font-size-root - Base font size for most browsers in px

// *line-height* (unit-less) = line height (px) / font size (px)
@function lineheight($line-height-in-px, $font-size-in-px) {
  @if ($line-height-in-px == "normal") {
    @return 1.2; // Standard "normal" line-height
  }

  @return strip-unit($line-height-in-px) / strip-unit($font-size-in-px);
}